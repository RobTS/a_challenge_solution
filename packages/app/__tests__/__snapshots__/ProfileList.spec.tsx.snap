// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The profile list renders correctly on fetch error 1`] = `
<RCTScrollView
  ListHeaderComponent={<ListHeader />}
  contentContainerStyle={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#ffffff",
      "justifyContent": "center",
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffa500",
            "justifyContent": "center",
            "padding": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          No connection to the server. Have you started it and adapted the SERVER_URL?
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The profile list renders correctly when loading 1`] = `
<RCTScrollView
  ListHeaderComponent={<ListHeader />}
  contentContainerStyle={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#ffffff",
      "justifyContent": "center",
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffa500",
            "justifyContent": "center",
            "padding": 10,
          }
        }
      >
        <Text>
          Loading content
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The profile list renders correctly with content 1`] = `
<RCTScrollView
  ListHeaderComponent={<ListHeader />}
  contentContainerStyle={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#ffffff",
      "justifyContent": "center",
    }
  }
  data={
    Array [
      Object {
        "avatar": "https://i.pravatar.cc/150?img=2",
        "id": "2",
        "name": "Esme Coleman",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "position": "relative",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "#000000",
                "flex": 1,
                "height": 421.875,
                "width": 750,
              },
            ]
          }
        >
          <FastImageView
            resizeMode="cover"
            source={
              Object {
                "priority": "normal",
                "uri": "https://i.pravatar.cc/150?img=2",
              }
            }
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "#ffffff",
              "bottom": 30,
              "fontWeight": "bold",
              "left": 0,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
              "position": "absolute",
            }
          }
        >
          Esme Coleman
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The profile list renders correctly without content 1`] = `
<RCTScrollView
  ListHeaderComponent={<ListHeader />}
  contentContainerStyle={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#ffffff",
      "justifyContent": "center",
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    />
  </View>
</RCTScrollView>
`;
